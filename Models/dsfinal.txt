#1
char Aclass(3,32)
Adymosim
1.4
Final state generated by Dymosim


#    Experiment parameters
double experiment(7,1)
      10                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
      20                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(488,67)
SysData.S_b
SysData.fn
ThreeBus.V_b
ThreeBus.V_0
ThreeBus.angle_0
ThreeBus.P_0
ThreeBus.Q_0
ThreeBus.S_b
ThreeBus.fn
ThreeBus.p.vr
ThreeBus.p.vi
ThreeBus.p.ir
ThreeBus.p.ii
ThreeBus.V
ThreeBus.angle
ThreeBus.displayPF
OneBus.V_b
OneBus.V_0
OneBus.angle_0
OneBus.P_0
OneBus.Q_0
OneBus.S_b
OneBus.fn
OneBus.p.vr
OneBus.p.vi
OneBus.p.ir
OneBus.p.ii
OneBus.V
OneBus.angle
OneBus.displayPF
pwLine1.p.ir
pwLine1.p.ii
pwLine1.n.ir
pwLine1.n.ii
pwLine1.R
pwLine1.X
pwLine1.G
pwLine1.B
pwLine1.S_b
pwLine1.t1
pwLine1.t2
pwLine1.opening
pwLine1.displayPF
pwLine1.P12
pwLine1.P21
pwLine1.Q12
pwLine1.Q21
pwLine1.Y.re
pwLine1.Y.im
pwLine1.Z.re
pwLine1.Z.im
pwLine3.p.vr
pwLine3.p.vi
pwLine3.p.ir
pwLine3.p.ii
pwLine3.n.vr
pwLine3.n.vi
pwLine3.n.ir
pwLine3.n.ii
pwLine3.R
pwLine3.X
pwLine3.G
pwLine3.B
pwLine3.S_b
pwLine3.t1
pwLine3.t2
pwLine3.opening
pwLine3.displayPF
pwLine3.P12
pwLine3.P21
pwLine3.Q12
pwLine3.Q21
pwLine3.Y.re
pwLine3.Y.im
pwLine3.Z.re
pwLine3.Z.im
infiniteBus.V_b
infiniteBus.V_0
infiniteBus.angle_0
infiniteBus.P_0
infiniteBus.Q_0
infiniteBus.S_b
infiniteBus.fn
infiniteBus.P
infiniteBus.Q
infiniteBus.p.ir
infiniteBus.p.ii
infiniteBus.displayPF
TwoBus.V_b
TwoBus.V_0
TwoBus.angle_0
TwoBus.P_0
TwoBus.Q_0
TwoBus.S_b
TwoBus.fn
TwoBus.p.vr
TwoBus.p.vi
TwoBus.p.ir
TwoBus.p.ii
TwoBus.V
TwoBus.angle
TwoBus.displayPF
twoWindingTransformer1.p.ir
twoWindingTransformer1.p.ii
twoWindingTransformer1.n.ir
twoWindingTransformer1.n.ii
twoWindingTransformer1.S_b
twoWindingTransformer1.V_b
twoWindingTransformer1.Sn
twoWindingTransformer1.Vn
twoWindingTransformer1.rT
twoWindingTransformer1.xT
twoWindingTransformer1.m
twoWindingTransformer1.Zn
twoWindingTransformer1.Zb
twoWindingTransformer1.r
twoWindingTransformer1.x
twoWindingTransformer1.tc
FiveBus.V_b
FiveBus.V_0
FiveBus.angle_0
FiveBus.P_0
FiveBus.Q_0
FiveBus.S_b
FiveBus.fn
FiveBus.p.vr
FiveBus.p.vi
FiveBus.p.ir
FiveBus.p.ii
FiveBus.V
FiveBus.angle
FiveBus.displayPF
pwLine2.p.ir
pwLine2.p.ii
pwLine2.n.ir
pwLine2.n.ii
pwLine2.R
pwLine2.X
pwLine2.G
pwLine2.B
pwLine2.S_b
pwLine2.t1
pwLine2.t2
pwLine2.opening
pwLine2.displayPF
pwLine2.P12
pwLine2.P21
pwLine2.Q12
pwLine2.Q21
pwLine2.Y.re
pwLine2.Y.im
pwLine2.Z.re
pwLine2.Z.im
lOADPQ.V_b
lOADPQ.V_0
lOADPQ.angle_0
lOADPQ.P_0
lOADPQ.Q_0
lOADPQ.S_b
lOADPQ.fn
lOADPQ.Sn
lOADPQ.V
lOADPQ.Angle_V
lOADPQ.P
lOADPQ.Q
lOADPQ.angle_0rad
lOADPQ.CoB
lOADPQ.Vmax
lOADPQ.Vmin
lOADPQ.forcePQ
pF2_1.voltage.InfiniteBusV_0
pF2_1.voltage.InfiniteBusangle_0
pF2_1.voltage.BreakerenableTrigger
pF2_1.voltage.TransformerB3B4m
pF2_1.voltage.GeneratorV_0
pF2_1.voltage.Generatorangle_0
pF2_1.voltage.PQLoadV_0
pF2_1.voltage.PQLoadangle_0
pF2_1.power.InfiniteBusP_0
pF2_1.power.InfiniteBusQ_0
pF2_1.power.GeneratorP_0
pF2_1.power.GeneratorQ_0
pF2_1.power.PQLoadP_0
pF2_1.power.PQLoadQ_0
pF2_1.power.MotorP_0
pF2_1.power.MotorQ_0
pF2_1.power.ShuntCapacitorQnom
pF1_1.voltage.InfiniteBusV_0
pF1_1.voltage.InfiniteBusangle_0
pF1_1.voltage.BreakerenableTrigger
pF1_1.voltage.TransformerB3B4m
pF1_1.voltage.GeneratorV_0
pF1_1.voltage.Generatorangle_0
pF1_1.voltage.PQLoadV_0
pF1_1.voltage.PQLoadangle_0
pF1_1.power.InfiniteBusP_0
pF1_1.power.InfiniteBusQ_0
pF1_1.power.GeneratorP_0
pF1_1.power.GeneratorQ_0
pF1_1.power.PQLoadP_0
pF1_1.power.PQLoadQ_0
pF1_1.power.MotorP_0
pF1_1.power.MotorQ_0
pF1_1.power.ShuntCapacitorQnom
pF3_1.voltage.InfiniteBusV_0
pF3_1.voltage.InfiniteBusangle_0
pF3_1.voltage.BreakerenableTrigger
pF3_1.voltage.TransformerB3B4m
pF3_1.voltage.GeneratorV_0
pF3_1.voltage.Generatorangle_0
pF3_1.voltage.PQLoadV_0
pF3_1.voltage.PQLoadangle_0
pF3_1.power.InfiniteBusP_0
pF3_1.power.InfiniteBusQ_0
pF3_1.power.GeneratorP_0
pF3_1.power.GeneratorQ_0
pF3_1.power.PQLoadP_0
pF3_1.power.PQLoadQ_0
pF3_1.power.MotorP_0
pF3_1.power.MotorQ_0
pF3_1.power.ShuntCapacitorQnom
pF5_1.voltage.InfiniteBusV_0
pF5_1.voltage.InfiniteBusangle_0
pF5_1.voltage.BreakerenableTrigger
pF5_1.voltage.TransformerB3B4m
pF5_1.voltage.GeneratorV_0
pF5_1.voltage.Generatorangle_0
pF5_1.voltage.PQLoadV_0
pF5_1.voltage.PQLoadangle_0
pF5_1.power.InfiniteBusP_0
pF5_1.power.InfiniteBusQ_0
pF5_1.power.GeneratorP_0
pF5_1.power.GeneratorQ_0
pF5_1.power.PQLoadP_0
pF5_1.power.PQLoadQ_0
pF5_1.power.MotorP_0
pF5_1.power.MotorQ_0
pF5_1.power.ShuntCapacitorQnom
pF6_1.voltage.InfiniteBusV_0
pF6_1.voltage.InfiniteBusangle_0
pF6_1.voltage.BreakerenableTrigger
pF6_1.voltage.TransformerB3B4m
pF6_1.voltage.GeneratorV_0
pF6_1.voltage.Generatorangle_0
pF6_1.voltage.PQLoadV_0
pF6_1.voltage.PQLoadangle_0
pF6_1.power.InfiniteBusP_0
pF6_1.power.InfiniteBusQ_0
pF6_1.power.GeneratorP_0
pF6_1.power.GeneratorQ_0
pF6_1.power.PQLoadP_0
pF6_1.power.PQLoadQ_0
pF6_1.power.MotorP_0
pF6_1.power.MotorQ_0
pF6_1.power.ShuntCapacitorQnom
pF7_1.voltage.InfiniteBusV_0
pF7_1.voltage.InfiniteBusangle_0
pF7_1.voltage.BreakerenableTrigger
pF7_1.voltage.TransformerB3B4m
pF7_1.voltage.GeneratorV_0
pF7_1.voltage.Generatorangle_0
pF7_1.voltage.PQLoadV_0
pF7_1.voltage.PQLoadangle_0
pF7_1.power.InfiniteBusP_0
pF7_1.power.InfiniteBusQ_0
pF7_1.power.GeneratorP_0
pF7_1.power.GeneratorQ_0
pF7_1.power.PQLoadP_0
pF7_1.power.PQLoadQ_0
pF7_1.power.MotorP_0
pF7_1.power.MotorQ_0
pF7_1.power.ShuntCapacitorQnom
breaker.enableTrigger
breaker.t_o
breaker.rc_enabled
breaker.t_rc
breaker.s.ir
breaker.s.ii
breaker.Open
breaker1.enableTrigger
breaker1.t_o
breaker1.rc_enabled
breaker1.t_rc
breaker1.s.ir
breaker1.s.ii
breaker1.r.ir
breaker1.r.ii
pwFault.p.ir
pwFault.p.ii
pwFault.R
pwFault.X
pwFault.t1
pwFault.t2
pwFault.ground
Imag
luigiRelay.add.u1
luigiRelay.add.u2
luigiRelay.add.y
luigiRelay.add.k1
luigiRelay.add.k2
luigiRelay.greater1.u1
luigiRelay.greater1.y
luigiRelay.booleanToReal1.u
luigiRelay.booleanToReal1.realTrue
luigiRelay.booleanToReal1.realFalse
luigiRelay.booleanToReal1.y
luigiRelay.const.k
luigiRelay.product.u1
luigiRelay.const1.k
luigiRelay.extractingTimeOfFault.switch1.u2
luigiRelay.extractingTimeOfFault.switch1.y
luigiRelay.extractingTimeOfFault.const.k
luigiRelay.extractingTimeOfFault.const1.k
luigiRelay.extractingTimeOfFault.greaterEqualThreshold.threshold
luigiRelay.extractingTimeOfFault.limIntegrator.k
luigiRelay.extractingTimeOfFault.limIntegrator.outMax
luigiRelay.extractingTimeOfFault.limIntegrator.outMin
luigiRelay.extractingTimeOfFault.limIntegrator.initType
luigiRelay.extractingTimeOfFault.limIntegrator.limitsAtInit
luigiRelay.extractingTimeOfFault.limIntegrator.y_start
luigiRelay.extractingTimeOfFault.limIntegrator.strict
luigiRelay.extractingTimeOfFault.limIntegrator.y
luigiRelay.extractingTimeOfFault.limIntegrator.der(y)
luigiRelay.timer.clock.offset
luigiRelay.timer.clock.startTime
luigiRelay.timer.clock.y
luigiRelay.timer.add.u1
luigiRelay.timer.add.u2
luigiRelay.timer.add.k1
luigiRelay.timer.add.k2
luigiRelay.timer.const.k
luigiRelay.timer.product.y
luigiRelay.timer.clock1.offset
luigiRelay.timer.clock1.startTime
luigiRelay.timer.greaterEqualThreshold.threshold
luigiRelay.timer.greaterEqualThreshold.y
luigiRelay.timer.const1.k
luigiRelay.Is
luigiRelay.greater2.u2
luigiRelay.greater2.y
luigiRelay.alpha
luigiRelay.TMS
luigiRelay.C
luigiRelay.calculatingOperationTime.switch1.u2
luigiRelay.calculatingOperationTime.switch1.y
luigiRelay.calculatingOperationTime.Const.k
luigiRelay.calculatingOperationTime.const1.k
luigiRelay.calculatingOperationTime.greaterEqualThreshold.threshold
luigiRelay.calculatingOperationTime.greaterEqualThreshold.y
luigiRelay.calculatingOperationTime.division1.y
luigiRelay.calculatingOperationTime.pickcupcurrent.k
luigiRelay.calculatingOperationTime.const2.k
luigiRelay.calculatingOperationTime.add.u1
luigiRelay.calculatingOperationTime.add.y
luigiRelay.calculatingOperationTime.add.k1
luigiRelay.calculatingOperationTime.add.k2
luigiRelay.calculatingOperationTime.product.u1
luigiRelay.calculatingOperationTime.TimeMultiplierSetting.k
luigiRelay.calculatingOperationTime.lessEqualThreshold.threshold
luigiRelay.calculatingOperationTime.lessEqualThreshold.y
luigiRelay.calculatingOperationTime.const.k
luigiRelay.calculatingOperationTime.alpha
luigiRelay.calculatingOperationTime.TMS
luigiRelay.calculatingOperationTime.C
luigiRelay.calculatingOperationTime.ls
luigiRelay.calculatingOperationTime.eps.k
luigiRelay.calculatingOperationTime.y3_1.y
luigiRelay.calculatingOperationTime.k
luigiRelay.k
luigiRelay.rSFlipFlop.Qini
luigiRelay.rSFlipFlop.QI
luigiRelay.rSFlipFlop.pre.pre_u_start
luigiRelay.rSFlipFlop.pre.u
luigiRelay.booleanConstant.k
luigiRelay.const2.k
luigiRelay.rSFlipFlop1.Qini
luigiRelay.rSFlipFlop1.QI
luigiRelay.rSFlipFlop1.pre.pre_u_start
luigiRelay.rSFlipFlop1.pre.u
luigiRelay.booleanConstant1.k
pSATGeneratorTGOV.SysData.S_b
pSATGeneratorTGOV.SysData.fn
pSATGeneratorTGOV.order2_1.V_b
pSATGeneratorTGOV.order2_1.V_0
pSATGeneratorTGOV.order2_1.angle_0
pSATGeneratorTGOV.order2_1.P_0
pSATGeneratorTGOV.order2_1.Q_0
pSATGeneratorTGOV.order2_1.S_b
pSATGeneratorTGOV.order2_1.fn
pSATGeneratorTGOV.order2_1.Sn
pSATGeneratorTGOV.order2_1.Vn
pSATGeneratorTGOV.order2_1.ra
pSATGeneratorTGOV.order2_1.x1d
pSATGeneratorTGOV.order2_1.M
pSATGeneratorTGOV.order2_1.D
pSATGeneratorTGOV.order2_1.delta
pSATGeneratorTGOV.order2_1.der(delta)
pSATGeneratorTGOV.order2_1.w
pSATGeneratorTGOV.order2_1.der(w)
pSATGeneratorTGOV.order2_1.v
pSATGeneratorTGOV.order2_1.P
pSATGeneratorTGOV.order2_1.Q
pSATGeneratorTGOV.order2_1.pm
pSATGeneratorTGOV.order2_1.anglev
pSATGeneratorTGOV.order2_1.vd
pSATGeneratorTGOV.order2_1.vq
pSATGeneratorTGOV.order2_1.id
pSATGeneratorTGOV.order2_1.iq
pSATGeneratorTGOV.order2_1.pe
pSATGeneratorTGOV.order2_1.vf_MB
pSATGeneratorTGOV.order2_1.w_b
pSATGeneratorTGOV.order2_1.S_SBtoMB
pSATGeneratorTGOV.order2_1.I_MBtoSB
pSATGeneratorTGOV.order2_1.V_MBtoSB
pSATGeneratorTGOV.order2_1.Z_MBtoSB
pSATGeneratorTGOV.order2_1.p0
pSATGeneratorTGOV.order2_1.q0
pSATGeneratorTGOV.order2_1.Vt0.re
pSATGeneratorTGOV.order2_1.Vt0.im
pSATGeneratorTGOV.order2_1.S0.re
pSATGeneratorTGOV.order2_1.S0.im
pSATGeneratorTGOV.order2_1.I0.re
pSATGeneratorTGOV.order2_1.I0.im
pSATGeneratorTGOV.order2_1.vr0
pSATGeneratorTGOV.order2_1.vi0
pSATGeneratorTGOV.order2_1.ir0
pSATGeneratorTGOV.order2_1.ii0
pSATGeneratorTGOV.order2_1.xq0
pSATGeneratorTGOV.order2_1.delta0
pSATGeneratorTGOV.order2_1.Vdq0.re
pSATGeneratorTGOV.order2_1.Vdq0.im
pSATGeneratorTGOV.order2_1.Idq0.re
pSATGeneratorTGOV.order2_1.Idq0.im
pSATGeneratorTGOV.order2_1.vd0
pSATGeneratorTGOV.order2_1.vq0
pSATGeneratorTGOV.order2_1.id0
pSATGeneratorTGOV.order2_1.iq0
pSATGeneratorTGOV.order2_1.pm00
pSATGeneratorTGOV.order2_1.K
pSATGeneratorTGOV.order2_1.c1
pSATGeneratorTGOV.order2_1.c2
pSATGeneratorTGOV.order2_1.c3
pSATGeneratorTGOV.order2_1.vf00
pSATGeneratorTGOV.V_0
pSATGeneratorTGOV.angle_0
pSATGeneratorTGOV.P_0
pSATGeneratorTGOV.Q_0
pSATGeneratorTGOV.tGtypeII.add1.y
pSATGeneratorTGOV.tGtypeII.add1.k1
pSATGeneratorTGOV.tGtypeII.add1.k2
pSATGeneratorTGOV.tGtypeII.transferFunction1.u
pSATGeneratorTGOV.tGtypeII.transferFunction1.y
pSATGeneratorTGOV.tGtypeII.transferFunction1.b[1]
pSATGeneratorTGOV.tGtypeII.transferFunction1.b[2]
pSATGeneratorTGOV.tGtypeII.transferFunction1.a[1]
pSATGeneratorTGOV.tGtypeII.transferFunction1.a[2]
pSATGeneratorTGOV.tGtypeII.transferFunction1.initType
pSATGeneratorTGOV.tGtypeII.transferFunction1.x_start[1]
pSATGeneratorTGOV.tGtypeII.transferFunction1.y_start
pSATGeneratorTGOV.tGtypeII.transferFunction1.na
pSATGeneratorTGOV.tGtypeII.transferFunction1.nb
pSATGeneratorTGOV.tGtypeII.transferFunction1.nx
pSATGeneratorTGOV.tGtypeII.transferFunction1.bb[1]
pSATGeneratorTGOV.tGtypeII.transferFunction1.bb[2]
pSATGeneratorTGOV.tGtypeII.transferFunction1.d
pSATGeneratorTGOV.tGtypeII.transferFunction1.a_end
pSATGeneratorTGOV.tGtypeII.transferFunction1.x_scaled[1]
pSATGeneratorTGOV.tGtypeII.transferFunction1.der(x_scaled[1])
pSATGeneratorTGOV.tGtypeII.wref
pSATGeneratorTGOV.tGtypeII.R
pSATGeneratorTGOV.tGtypeII.pmax0
pSATGeneratorTGOV.tGtypeII.pmin0
pSATGeneratorTGOV.tGtypeII.Ts
pSATGeneratorTGOV.tGtypeII.T3
pSATGeneratorTGOV.tGtypeII.S_b
pSATGeneratorTGOV.tGtypeII.Sn
pSATGeneratorTGOV.tGtypeII.gain1.k
pSATGeneratorTGOV.tGtypeII.const.k
pSATGeneratorTGOV.tGtypeII.add2.y
pSATGeneratorTGOV.tGtypeII.add2.k1
pSATGeneratorTGOV.tGtypeII.add2.k2
pSATGeneratorTGOV.tGtypeII.limiter1.uMax
pSATGeneratorTGOV.tGtypeII.limiter1.uMin
pSATGeneratorTGOV.tGtypeII.limiter1.strict
pSATGeneratorTGOV.tGtypeII.limiter1.limitsAtInit
pSATGeneratorTGOV.tGtypeII.Ro
pSATGeneratorTGOV.tGtypeII.pmax
pSATGeneratorTGOV.tGtypeII.pmin

double initialValue(488,6)
 -1     750                  0  0  1   280   # SysData.S_b
 -1      50                  0  0  1   280   # SysData.fn
 -1     380                  0  0  1   280   # ThreeBus.V_b
 -1  1.0455000000000001E+00  0  0  1   280   # ThreeBus.V_0
 -1 -1.2699999999999999E+01  0  0  1   280   # ThreeBus.angle_0
 -1    1200                  0  0  1   280   # ThreeBus.P_0
 -1      53                  0  0  1   280   # ThreeBus.Q_0
 -2     750                  0  0  6   256   # ThreeBus.S_b
 -2      50                  0  0  6   256   # ThreeBus.fn
 -2  1.0776091746729219E+00  0  0  6   260   # ThreeBus.p.vr
 -2  1.3472835115579015E-01  0  0  6   260   # ThreeBus.p.vi
 -2       0                  0  0  6   388   # ThreeBus.p.ir
 -2       0                  0  0  6   388   # ThreeBus.p.ii
 -2  1.0859987393843575E+00  0  0  6   256   # ThreeBus.V
 -2  7.1264405277175404E+00  0  0  6   256   # ThreeBus.angle
 -1       1                  0  0  1   281   # ThreeBus.displayPF
 -1     380                  0  0  1   280   # OneBus.V_b
 -1  1.0800000000000001E+00  0  0  1   280   # OneBus.V_0
 -1       0                  0  0  1   280   # OneBus.angle_0
 -1     450                  0  0  1   280   # OneBus.P_0
 -1     118                  0  0  1   280   # OneBus.Q_0
 -2     750                  0  0  6   256   # OneBus.S_b
 -2      50                  0  0  6   256   # OneBus.fn
 -2  1.0600000000000001E+00  0  0  6   260   # OneBus.p.vr
 -2       0                  0  0  6   260   # OneBus.p.vi
 -2       0                  0  0  6   388   # OneBus.p.ir
 -2       0                  0  0  6   388   # OneBus.p.ii
 -2  1.0600000000000001E+00  0  0  6   256   # OneBus.V
 -2       0                  0  0  6   256   # OneBus.angle
 -1       1                  0  0  1   281   # OneBus.displayPF
 -2 -3.2516898913908882E-01  0  0  6   388   # pwLine1.p.ir
 -2  4.2500019326641734E-02  0  0  6   388   # pwLine1.p.ii
 -2  3.2516898913908876E-01  0  0  6   420   # pwLine1.n.ir
 -2 -4.2500019326640541E-02  0  0  6   420   # pwLine1.n.ii
 -1       0                  0  0  1   280   # pwLine1.R
 -1  4.1433333330000000E-01  0  0  1   280   # pwLine1.X
 -1       0                  0  0  1   280   # pwLine1.G
 -1       0                  0  0  1   280   # pwLine1.B
 -2     750                  0  0  6   256   # pwLine1.S_b
 -2  9.9999999999999995E+59  0  0  6   256   # pwLine1.t1
 -2  9.9999999999999995E+59  0  0  6   256   # pwLine1.t2
 -2       1                  0  0  6   258   # pwLine1.opening
 -1       0                  0  0  1   281   # pwLine1.displayPF
 -2 -2.5850934636557560E+02  0  0  6   256   # pwLine1.P12
 -2 -2.5850934636557571E+02  0  0  6   256   # pwLine1.P21
 -2 -3.3787515364680182E+01  0  0  6   256   # pwLine1.Q12
 -2 -6.7205919377901608E+01  0  0  6   256   # pwLine1.Q21
 -2       0                  0  0  6  1280   # pwLine1.Y.re
 -2       0                  0  0  6  1280   # pwLine1.Y.im
 -2       0                  0  0  6  1280   # pwLine1.Z.re
 -2  4.1433333330000000E-01  0  0  6  1280   # pwLine1.Z.im
 -2  9.3977456820689812E+07  0  0  6   292   # pwLine3.p.vr
 -2 -1.4934093763869011E+10  0  0  6   292   # pwLine3.p.vi
 -2 -3.8699996000889911E-39  0  0  6   420   # pwLine3.p.ir
 -2  1.8807909613156600E-37  0  0  6   420   # pwLine3.p.ii
 -2  9.3977456820689812E+07  0  0  6   292   # pwLine3.n.vr
 -2 -1.4934093763869011E+10  0  0  6   292   # pwLine3.n.vi
 -2       0                  0  0  6   388   # pwLine3.n.ir
 -2       0                  0  0  6   388   # pwLine3.n.ii
 -1       0                  0  0  1   280   # pwLine3.R
 -1  4.1433333300000003E-01  0  0  1   280   # pwLine3.X
 -1       0                  0  0  1   280   # pwLine3.G
 -1       0                  0  0  1   280   # pwLine3.B
 -2     750                  0  0  6   256   # pwLine3.S_b
 -2  9.9999999999999995E+59  0  0  6   256   # pwLine3.t1
 -2  9.9999999999999995E+59  0  0  6   256   # pwLine3.t2
 -2       1                  0  0  6   258   # pwLine3.opening
 -1       0                  0  0  1   281   # pwLine3.displayPF
 -2 -2.1068659120296400E-24  0  0  6   256   # pwLine3.P12
 -2       0                  0  0  6   256   # pwLine3.P21
 -2  3.0089806318714475E-26  0  0  6   256   # pwLine3.Q12
 -2       0                  0  0  6   256   # pwLine3.Q21
 -2       0                  0  0  6  1280   # pwLine3.Y.re
 -2       0                  0  0  6  1280   # pwLine3.Y.im
 -2       0                  0  0  6  1280   # pwLine3.Z.re
 -2  4.1433333300000003E-01  0  0  6  1280   # pwLine3.Z.im
 -1     380                  0  0  1   280   # infiniteBus.V_b
 -2  1.0600000000000001E+00  0  0  6   256   # infiniteBus.V_0
 -2       0                  0  0  6   256   # infiniteBus.angle_0
 -2    -350                  0  0  6   256   # infiniteBus.P_0
 -2     -16                  0  0  6   256   # infiniteBus.Q_0
 -2     750                  0  0  6   256   # infiniteBus.S_b
 -2      50                  0  0  6   256   # infiniteBus.fn
 -2 -2.5850934636557560E+02  0  0  6   256   # infiniteBus.P
 -2  3.3787515364680182E+01  0  0  6   256   # infiniteBus.Q
 -2  3.2516898913908882E-01  0  0  6   388   # infiniteBus.p.ir
 -2 -4.2500019326641734E-02  0  0  6   388   # infiniteBus.p.ii
 -1       1                  0  0  1   281   # infiniteBus.displayPF
 -1     750                  0  0  1   280   # TwoBus.V_b
 -1       1                  0  0  1   280   # TwoBus.V_0
 -1       0                  0  0  1   280   # TwoBus.angle_0
 -1       1                  0  0  1   280   # TwoBus.P_0
 -1       0                  0  0  1   280   # TwoBus.Q_0
 -2     750                  0  0  6   256   # TwoBus.S_b
 -2      50                  0  0  6   256   # TwoBus.fn
 -2  1.0421700782323959E+00  0  0  6   260   # TwoBus.p.vr
 -2  1.8148058212269058E-01  0  0  6   260   # TwoBus.p.vi
 -2       0                  0  0  6   388   # TwoBus.p.ir
 -2       0                  0  0  6   388   # TwoBus.p.ii
 -2  1.0578533327690134E+00  0  0  6   256   # TwoBus.V
 -2  9.8782727932022887E+00  0  0  6   256   # TwoBus.angle
 -1       1                  0  0  1   281   # TwoBus.displayPF
 -2  4.6809927018233682E-01  0  0  6   388   # twoWindingTransformer1.p.ir
 -2 -5.4146791302673816E-02  0  0  6   388   # twoWindingTransformer1.p.ii
 -2 -4.5009545209840029E-01  0  0  6   420   # twoWindingTransformer1.n.ir
 -2  5.2064222406418920E-02  0  0  6   420   # twoWindingTransformer1.n.ii
 -1     750                  0  0  1   280   # twoWindingTransformer1.S_b
 -1      20                  0  0  1   280   # twoWindingTransformer1.V_b
 -1     500                  0  0  1   280   # twoWindingTransformer1.Sn
 -1      20                  0  0  1   280   # twoWindingTransformer1.Vn
 -1       0                  0  0  1   280   # twoWindingTransformer1.rT
 -1  8.0000000000000002E-02  0  0  1   280   # twoWindingTransformer1.xT
 -1  9.6153846153846145E-01  0  0  1   280   # twoWindingTransformer1.m
 -2  8.0000000000000004E-01  0  0  6  1280   # twoWindingTransformer1.Zn
 -2  5.3333333333333333E-01  0  0  6  1280   # twoWindingTransformer1.Zb
 -2       0                  0  0  6  1280   # twoWindingTransformer1.r
 -2  1.2000000000000001E-01  0  0  6  1280   # twoWindingTransformer1.x
 -2       1                  0  0  6  1281   # twoWindingTransformer1.tc
 -1     380                  0  0  1   280   # FiveBus.V_b
 -1  1.0455000000000001E+00  0  0  1   280   # FiveBus.V_0
 -1 -1.5199999999999999E+01  0  0  1   280   # FiveBus.angle_0
 -1    1200                  0  0  1   280   # FiveBus.P_0
 -1       0                  0  0  1   280   # FiveBus.Q_0
 -2     750                  0  0  6   256   # FiveBus.S_b
 -2      50                  0  0  6   256   # FiveBus.fn
 -2  1.0773222486798810E+00  0  0  6   260   # FiveBus.p.vr
 -2  1.3098055856474689E-01  0  0  6   260   # FiveBus.p.vi
 -2       0                  0  0  6   388   # FiveBus.p.ir
 -2       0                  0  0  6   388   # FiveBus.p.ii
 -2  1.0852553313495439E+00  0  0  6   256   # FiveBus.V
 -2  6.9319842098191149E+00  0  0  6   256   # FiveBus.angle
 -1       1                  0  0  1   281   # FiveBus.displayPF
 -2  1.2492646295931153E-01  0  0  6   420   # pwLine2.p.ir
 -2 -9.5642030797783769E-03  0  0  6   420   # pwLine2.p.ii
 -2 -1.2492646295931153E-01  0  0  6   420   # pwLine2.n.ir
 -2  9.5642030797783769E-03  0  0  6   420   # pwLine2.n.ii
 -1       0                  0  0  1   280   # pwLine2.R
 -1  2.9999989612000000E-02  0  0  1   280   # pwLine2.X
 -1       0                  0  0  1   280   # pwLine2.G
 -1       0                  0  0  1   280   # pwLine2.B
 -2     750                  0  0  6   256   # pwLine2.S_b
 -2  9.9999999999999995E+59  0  0  6   256   # pwLine2.t1
 -2  9.9999999999999995E+59  0  0  6   256   # pwLine2.t2
 -2       1                  0  0  6   258   # pwLine2.opening
 -1       1                  0  0  1   281   # pwLine2.displayPF
 -2  1.0000000000000004E+02  0  0  6   256   # pwLine2.P12
 -2  9.9999999999999972E+01  0  0  6   256   # pwLine2.P21
 -2  2.0353207018077846E+01  0  0  6   256   # pwLine2.Q12
 -2  2.0000000000000004E+01  0  0  6   256   # pwLine2.Q21
 -2       0                  0  0  6  1280   # pwLine2.Y.re
 -2       0                  0  0  6  1280   # pwLine2.Y.im
 -2       0                  0  0  6  1280   # pwLine2.Z.re
 -2  2.9999989612000000E-02  0  0  6  1280   # pwLine2.Z.im
 -1     380                  0  0  1   280   # lOADPQ.V_b
 -2  1.0674999999999999E+00  0  0  6   256   # lOADPQ.V_0
 -2  4.7000000000000002E+00  0  0  6   256   # lOADPQ.angle_0
 -2     100                  0  0  6   256   # lOADPQ.P_0
 -2      20                  0  0  6   256   # lOADPQ.Q_0
 -2     750                  0  0  6   256   # lOADPQ.S_b
 -2      50                  0  0  6   256   # lOADPQ.fn
 -2     750                  0  0  6   256   # lOADPQ.Sn
 -2  1.0852553313495439E+00  0  0  6   256   # lOADPQ.V
 -2  1.2098594815760100E-01  0  0  6   256   # lOADPQ.Angle_V
 -2  1.3333333333333333E-01  0  0  6   256   # lOADPQ.P
 -2  2.6666666666666668E-02  0  0  6   256   # lOADPQ.Q
 -2  8.2030474843733492E-02  0  0  6  1280   # lOADPQ.angle_0rad
 -2       1                  0  0  6  1280   # lOADPQ.CoB
 -2  1.2000000000000000E+00  0  0  6   256   # lOADPQ.Vmax
 -2  8.0000000000000004E-01  0  0  6   256   # lOADPQ.Vmin
 -2       1                  0  0  6   257   # lOADPQ.forcePQ
 -1  1.0600000000000001E+00  0  0  1   280   # pF2_1.voltage.InfiniteBusV_0
 -1       0                  0  0  1   280   # pF2_1.voltage.InfiniteBusangle_0
 -1       0                  0  0  1   281   # pF2_1.voltage.BreakerenableTrigger
 -1    9999                  0  0  1   280   # pF2_1.voltage.TransformerB3B4m
 -1  1.0100000000000000E+00  0  0  1   280   # pF2_1.voltage.GeneratorV_0
 -1  2.5000000000000000E+00  0  0  1   280   # pF2_1.voltage.Generatorangle_0
 -1  1.0410999999999999E+00  0  0  1   280   # pF2_1.voltage.PQLoadV_0
 -1 -1.6000000000000001E+00  0  0  1   280   # pF2_1.voltage.PQLoadangle_0
 -1      50                  0  0  1   280   # pF2_1.power.InfiniteBusP_0
 -1      60                  0  0  1   280   # pF2_1.power.InfiniteBusQ_0
 -1     350                  0  0  1   280   # pF2_1.power.GeneratorP_0
 -1      47                  0  0  1   280   # pF2_1.power.GeneratorQ_0
 -1     400                  0  0  1   280   # pF2_1.power.PQLoadP_0
 -1      80                  0  0  1   280   # pF2_1.power.PQLoadQ_0
 -1       0                  0  0  1   280   # pF2_1.power.MotorP_0
 -1       0                  0  0  1   280   # pF2_1.power.MotorQ_0
 -1       0                  0  0  1   280   # pF2_1.power.ShuntCapacitorQnom
 -1  1.0600000000000001E+00  0  0  1   280   # pF1_1.voltage.InfiniteBusV_0
 -1       0                  0  0  1   280   # pF1_1.voltage.InfiniteBusangle_0
 -1       0                  0  0  1   281   # pF1_1.voltage.BreakerenableTrigger
 -1    9999                  0  0  1   280   # pF1_1.voltage.TransformerB3B4m
 -1  1.0400000000000000E+00  0  0  1   280   # pF1_1.voltage.GeneratorV_0
 -1  8.8000000000000007E+00  0  0  1   280   # pF1_1.voltage.Generatorangle_0
 -1  1.0674999999999999E+00  0  0  1   280   # pF1_1.voltage.PQLoadV_0
 -1  4.7000000000000002E+00  0  0  1   280   # pF1_1.voltage.PQLoadangle_0
 -1    -350                  0  0  1   280   # pF1_1.power.InfiniteBusP_0
 -1     -16                  0  0  1   280   # pF1_1.power.InfiniteBusQ_0
 -1     450                  0  0  1   280   # pF1_1.power.GeneratorP_0
 -1      99                  0  0  1   280   # pF1_1.power.GeneratorQ_0
 -1     100                  0  0  1   280   # pF1_1.power.PQLoadP_0
 -1      20                  0  0  1   280   # pF1_1.power.PQLoadQ_0
 -1       0                  0  0  1   280   # pF1_1.power.MotorP_0
 -1       0                  0  0  1   280   # pF1_1.power.MotorQ_0
 -1       0                  0  0  1   280   # pF1_1.power.ShuntCapacitorQnom
 -1  1.0600000000000001E+00  0  0  1   280   # pF3_1.voltage.InfiniteBusV_0
 -1       0                  0  0  1   280   # pF3_1.voltage.InfiniteBusangle_0
 -1       0                  0  0  1   281   # pF3_1.voltage.BreakerenableTrigger
 -1    9999                  0  0  1   280   # pF3_1.voltage.TransformerB3B4m
 -1  1.0100000000000000E+00  0  0  1   280   # pF3_1.voltage.GeneratorV_0
 -1       1                  0  0  1   280   # pF3_1.voltage.Generatorangle_0
 -1  1.0404000000000000E+00  0  0  1   280   # pF3_1.voltage.PQLoadV_0
 -1 -3.2000000000000002E+00  0  0  1   280   # pF3_1.voltage.PQLoadangle_0
 -1     150                  0  0  1   280   # pF3_1.power.InfiniteBusP_0
 -1      66                  0  0  1   280   # pF3_1.power.InfiniteBusQ_0
 -1     350                  0  0  1   280   # pF3_1.power.GeneratorP_0
 -1      50                  0  0  1   280   # pF3_1.power.GeneratorQ_0
 -1     500                  0  0  1   280   # pF3_1.power.PQLoadP_0
 -1      80                  0  0  1   280   # pF3_1.power.PQLoadQ_0
 -1       0                  0  0  1   280   # pF3_1.power.MotorP_0
 -1       0                  0  0  1   280   # pF3_1.power.MotorQ_0
 -1       0                  0  0  1   280   # pF3_1.power.ShuntCapacitorQnom
 -1  1.0800000000000001E+00  0  0  1   280   # pF5_1.voltage.InfiniteBusV_0
 -1       0                  0  0  1   280   # pF5_1.voltage.InfiniteBusangle_0
 -1       0                  0  0  1   281   # pF5_1.voltage.BreakerenableTrigger
 -1    9999                  0  0  1   280   # pF5_1.voltage.TransformerB3B4m
 -1  1.0100000000000000E+00  0  0  1   280   # pF5_1.voltage.GeneratorV_0
 -1     -10                  0  0  1   280   # pF5_1.voltage.Generatorangle_0
 -1  1.0445000000000000E+00  0  0  1   280   # pF5_1.voltage.PQLoadV_0
 -1 -1.5199999999999999E+01  0  0  1   280   # pF5_1.voltage.PQLoadangle_0
 -1    9000                  0  0  1   280   # pF5_1.power.InfiniteBusP_0
 -1     236                  0  0  1   280   # pF5_1.power.InfiniteBusQ_0
 -1     300                  0  0  1   280   # pF5_1.power.GeneratorP_0
 -1      37                  0  0  1   280   # pF5_1.power.GeneratorQ_0
 -1    1200                  0  0  1   280   # pF5_1.power.PQLoadP_0
 -1       0                  0  0  1   280   # pF5_1.power.PQLoadQ_0
 -1       0                  0  0  1   280   # pF5_1.power.MotorP_0
 -1       0                  0  0  1   280   # pF5_1.power.MotorQ_0
 -1       0                  0  0  1   280   # pF5_1.power.ShuntCapacitorQnom
 -1  1.0800000000000001E+00  0  0  1   280   # pF6_1.voltage.InfiniteBusV_0
 -1       0                  0  0  1   280   # pF6_1.voltage.InfiniteBusangle_0
 -1       0                  0  0  1   281   # pF6_1.voltage.BreakerenableTrigger
 -1    9999                  0  0  1   280   # pF6_1.voltage.TransformerB3B4m
 -1  1.0100000000000000E+00  0  0  1   280   # pF6_1.voltage.GeneratorV_0
 -1 -1.4800000000000001E+01  0  0  1   280   # pF6_1.voltage.Generatorangle_0
 -1  1.0088999999999999E+00  0  0  1   280   # pF6_1.voltage.PQLoadV_0
 -1 -2.0899999999999999E+01  0  0  1   280   # pF6_1.voltage.PQLoadangle_0
 -1    1200                  0  0  1   280   # pF6_1.power.InfiniteBusP_0
 -1     434                  0  0  1   280   # pF6_1.power.InfiniteBusQ_0
 -1     300                  0  0  1   280   # pF6_1.power.GeneratorP_0
 -1     213                  0  0  1   280   # pF6_1.power.GeneratorQ_0
 -1    1500                  0  0  1   280   # pF6_1.power.PQLoadP_0
 -1     150                  0  0  1   280   # pF6_1.power.PQLoadQ_0
 -1       0                  0  0  1   280   # pF6_1.power.MotorP_0
 -1       0                  0  0  1   280   # pF6_1.power.MotorQ_0
 -1       0                  0  0  1   280   # pF6_1.power.ShuntCapacitorQnom
 -1  1.0800000000000001E+00  0  0  1   280   # pF7_1.voltage.InfiniteBusV_0
 -1       0                  0  0  1   280   # pF7_1.voltage.InfiniteBusangle_0
 -1       0                  0  0  1   281   # pF7_1.voltage.BreakerenableTrigger
 -1    9999                  0  0  1   280   # pF7_1.voltage.TransformerB3B4m
 -1  1.0100000000000000E+00  0  0  1   280   # pF7_1.voltage.GeneratorV_0
 -1 -1.1100000000000000E+01  0  0  1   280   # pF7_1.voltage.Generatorangle_0
 -1  1.0128999999999999E+00  0  0  1   280   # pF7_1.voltage.PQLoadV_0
 -1 -1.8600000000000001E+01  0  0  1   280   # pF7_1.voltage.PQLoadangle_0
 -1    1050                  0  0  1   280   # pF7_1.power.InfiniteBusP_0
 -1     374                  0  0  1   280   # pF7_1.power.InfiniteBusQ_0
 -1     450                  0  0  1   280   # pF7_1.power.GeneratorP_0
 -1     198                  0  0  1   280   # pF7_1.power.GeneratorQ_0
 -1    1500                  0  0  1   280   # pF7_1.power.PQLoadP_0
 -1     150                  0  0  1   280   # pF7_1.power.PQLoadQ_0
 -1       0                  0  0  1   280   # pF7_1.power.MotorP_0
 -1       0                  0  0  1   280   # pF7_1.power.MotorQ_0
 -1       0                  0  0  1   280   # pF7_1.power.ShuntCapacitorQnom
 -2       1                  0  0  6   257   # breaker.enableTrigger
 -1  9.9999999999999995E+59  0  0  1   280   # breaker.t_o
 -2       0                  0  0  6   257   # breaker.rc_enabled
 -1  9.9999999999999995E+59  0  0  1   280   # breaker.t_rc
 -2       0                  0  0  6   388   # breaker.s.ir
 -2       0                  0  0  6   388   # breaker.s.ii
 -2       1                  0  0  6  1345   # breaker.Open
 -2       1                  0  0  6   257   # breaker1.enableTrigger
 -1  9.9999999999999995E+59  0  0  1   280   # breaker1.t_o
 -2       0                  0  0  6   257   # breaker1.rc_enabled
 -1  9.9999999999999995E+59  0  0  1   280   # breaker1.t_rc
 -2       0                  0  0  6   388   # breaker1.s.ir
 -2       0                  0  0  6   388   # breaker1.s.ii
 -2       0                  0  0  6   388   # breaker1.r.ir
 -2       0                  0  0  6   388   # breaker1.r.ii
 -2       0                  0  0  6   388   # pwFault.p.ir
 -2       0                  0  0  6   388   # pwFault.p.ii
 -2       0                  0  0  6   256   # pwFault.R
 -2  3.7499999999999999E-02  0  0  6   256   # pwFault.X
 -2       1                  0  0  6   256   # pwFault.t1
 -2  1.1399900000000001E+00  0  0  6   256   # pwFault.t2
 -2       0                  0  0  6  1281   # pwFault.ground
 -2  1.8811890733940469E-37  0  0  6   256   # Imag
 -2  1.0000000000000002E+00  0  0  6   256   # luigiRelay.add.u1
 -2      10                  0  0  6   256   # luigiRelay.add.u2
 -2       9                  0  0  6   256   # luigiRelay.add.y
 -1      -1                  0  0  1   280   # luigiRelay.add.k1
 -1       1                  0  0  1   280   # luigiRelay.add.k2
 -2  6.0463706840498562E-37  0  0  6   256   # luigiRelay.greater1.u1
 -2       0                  0  0  6   321   # luigiRelay.greater1.y
 -2       1                  0  0  6   321   # luigiRelay.booleanToReal1.u
 -1       1                  0  0  1   280   # luigiRelay.booleanToReal1.realTrue
 -1       0                  0  0  1   280   # luigiRelay.booleanToReal1.realFalse
 -2       1                  0  0  6   320   # luigiRelay.booleanToReal1.y
 -2       1                  0  0  6   256   # luigiRelay.const.k
 -2  8.5508594245183954E-37  0  0  6   256   # luigiRelay.product.u1
 -1  7.0710678118654746E-01  0  0  1   280   # luigiRelay.const1.k
 -2       1                  0  0  6   321   # luigiRelay.extractingTimeOfFault.switch1.u2
 -2  1.0000000000000002E+00  0  0  6   256   # luigiRelay.extractingTimeOfFault.switch1.y
 -1    1000                  0  0  1   280   # luigiRelay.extractingTimeOfFault.const.k
 -1       1                  0  0  1   280   # luigiRelay.extractingTimeOfFault.const1.k
 -1  9.0000000000000002E-01  0  0  1   280   # luigiRelay.extractingTimeOfFault.greaterEqualThreshold.threshold
 -1       1                  0  0  1   280   # luigiRelay.extractingTimeOfFault.limIntegrator.k
 -1       1                  0  0  1   280   # luigiRelay.extractingTimeOfFault.limIntegrator.outMax
 -2      -1                  0  0  6   256   # luigiRelay.extractingTimeOfFault.limIntegrator.outMin
 -2       3                  1  4  6   258   # luigiRelay.extractingTimeOfFault.limIntegrator.initType
 -2       1                  0  0  6   257   # luigiRelay.extractingTimeOfFault.limIntegrator.limitsAtInit
 -1       0                  0  0  1   280   # luigiRelay.extractingTimeOfFault.limIntegrator.y_start
 -2       0                  0  0  6   257   # luigiRelay.extractingTimeOfFault.limIntegrator.strict
 -2  1.0000000000000002E+00  0  0  2   272   # luigiRelay.extractingTimeOfFault.limIntegrator.y
 -2       0                  0  0  3   256   # luigiRelay.extractingTimeOfFault.limIntegrator.der(y)
 -1       0                  0  0  1   280   # luigiRelay.timer.clock.offset
 -1       0                  0  0  1   280   # luigiRelay.timer.clock.startTime
 -2      10                  0  0  6   256   # luigiRelay.timer.clock.y
 -2       0                  0  0  6   256   # luigiRelay.timer.add.u1
 -2      10                  0  0  6   256   # luigiRelay.timer.add.u2
 -1       1                  0  0  1   280   # luigiRelay.timer.add.k1
 -1       1                  0  0  1   280   # luigiRelay.timer.add.k2
 -1      -1                  0  0  1   280   # luigiRelay.timer.const.k
 -2     -10                  0  0  6   256   # luigiRelay.timer.product.y
 -1       0                  0  0  1   280   # luigiRelay.timer.clock1.offset
 -1       0                  0  0  1   280   # luigiRelay.timer.clock1.startTime
 -1  9.0000000000000002E-01  0  0  1   280   # luigiRelay.timer.greaterEqualThreshold.threshold
 -2       1                  0  0  6   321   # luigiRelay.timer.greaterEqualThreshold.y
 -1       0                  0  0  1   280   # luigiRelay.timer.const1.k
 -1       1                  0  0  1   280   # luigiRelay.Is
 -2  1.4998393029302440E-01  0  0  6   320   # luigiRelay.greater2.u2
 -2       1                  0  0  6   321   # luigiRelay.greater2.y
 -1  2.0000000000000000E-02  0  0  1   280   # luigiRelay.alpha
 -1  5.0000000000000000E-01  0  0  1   280   # luigiRelay.TMS
 -1  1.4000000000000001E-01  0  0  1   280   # luigiRelay.C
 -2       1                  0  0  6   321   # luigiRelay.calculatingOperationTime.switch1.u2
 -2  1.4000000000000001E-01  0  0  6   320   # luigiRelay.calculatingOperationTime.switch1.y
 -2  1.4000000000000001E-01  0  0  6   256   # luigiRelay.calculatingOperationTime.Const.k
 -1       0                  0  0  1   280   # luigiRelay.calculatingOperationTime.const1.k
 -1       0                  0  0  1   280   # luigiRelay.calculatingOperationTime.greaterEqualThreshold.threshold
 -2       1                  0  0  6   321   # luigiRelay.calculatingOperationTime.greaterEqualThreshold.y
 -2  8.2826995671915843E-37  0  0  6   256   # luigiRelay.calculatingOperationTime.division1.y
 -2  7.2999999999999998E-01  0  0  6   256   # luigiRelay.calculatingOperationTime.pickcupcurrent.k
 -1       1                  0  0  1   280   # luigiRelay.calculatingOperationTime.const2.k
 -2  1.8982938388172441E-01  0  0  6   256   # luigiRelay.calculatingOperationTime.add.u1
 -2 -8.1017061611827557E-01  0  0  6   256   # luigiRelay.calculatingOperationTime.add.y
 -1       1                  0  0  1   280   # luigiRelay.calculatingOperationTime.add.k1
 -1      -1                  0  0  1   280   # luigiRelay.calculatingOperationTime.add.k2
 -2  3.4146341463414637E-01  0  0  6   320   # luigiRelay.calculatingOperationTime.product.u1
 -1  4.3923865300100001E-01  0  0  1   280   # luigiRelay.calculatingOperationTime.TimeMultiplierSetting.k
 -1       0                  0  0  1   280   # luigiRelay.calculatingOperationTime.lessEqualThreshold.threshold
 -2       0                  0  0  6   321   # luigiRelay.calculatingOperationTime.lessEqualThreshold.y
 -2  2.0000000000000000E-02  0  0  6   256   # luigiRelay.calculatingOperationTime.const.k
 -1  2.0000000000000000E-02  0  0  1   280   # luigiRelay.calculatingOperationTime.alpha
 -1  2.1492000000000000E-01  0  0  1   280   # luigiRelay.calculatingOperationTime.TMS
 -1  1.4000000000000001E-01  0  0  1   280   # luigiRelay.calculatingOperationTime.C
 -1  7.2999999999999998E-01  0  0  1   280   # luigiRelay.calculatingOperationTime.ls
 -1  4.0999999999999998E-01  0  0  1   280   # luigiRelay.calculatingOperationTime.eps.k
 -2  2.4390243902439024E+00  0  0  6   256   # luigiRelay.calculatingOperationTime.y3_1.y
 -1  4.1000000000000002E-02  0  0  1   280   # luigiRelay.calculatingOperationTime.k
 -1  4.1000000000000002E-02  0  0  1   280   # luigiRelay.k
 -1       0                  0  0  1   281   # luigiRelay.rSFlipFlop.Qini
 -2       0                  0  0  6   321   # luigiRelay.rSFlipFlop.QI
 -2       1                  0  0  6   257   # luigiRelay.rSFlipFlop.pre.pre_u_start
 -2       0                  0  0  6   321   # luigiRelay.rSFlipFlop.pre.u
 -1       0                  0  0  1   281   # luigiRelay.booleanConstant.k
 -1  2.2000000000000000E-01  0  0  1   280   # luigiRelay.const2.k
 -1       0                  0  0  1   281   # luigiRelay.rSFlipFlop1.Qini
 -2       0                  0  0  6   321   # luigiRelay.rSFlipFlop1.QI
 -2       1                  0  0  6   257   # luigiRelay.rSFlipFlop1.pre.pre_u_start
 -2       0                  0  0  6   321   # luigiRelay.rSFlipFlop1.pre.u
 -1       0                  0  0  1   281   # luigiRelay.booleanConstant1.k
 -1     750                  0  0  1   280   # pSATGeneratorTGOV.SysData.S_b
 -1      50                  0  0  1   280   # pSATGeneratorTGOV.SysData.fn
 -1      20                  0  0  1   280   # pSATGeneratorTGOV.order2_1.V_b
 -2  1.0400000000000000E+00  0  0  6   256   # pSATGeneratorTGOV.order2_1.V_0
 -2  8.8000000000000007E+00  0  0  6   256   # pSATGeneratorTGOV.order2_1.angle_0
 -2     450                  0  0  6   256   # pSATGeneratorTGOV.order2_1.P_0
 -2      99                  0  0  6   256   # pSATGeneratorTGOV.order2_1.Q_0
 -2     750                  0  0  6   256   # pSATGeneratorTGOV.order2_1.S_b
 -2      50                  0  0  6   256   # pSATGeneratorTGOV.order2_1.fn
 -1     500                  0  0  1   280   # pSATGeneratorTGOV.order2_1.Sn
 -1      20                  0  0  1   280   # pSATGeneratorTGOV.order2_1.Vn
 -1       0                  0  0  1   280   # pSATGeneratorTGOV.order2_1.ra
 -1  4.1480000000000000E-01  0  0  1   280   # pSATGeneratorTGOV.order2_1.x1d
 -1       7                  0  0  1   280   # pSATGeneratorTGOV.order2_1.M
 -2       1                  0  0  6   256   # pSATGeneratorTGOV.order2_1.D
 -2  4.1400328076910764E-01  0  0  2   272   # pSATGeneratorTGOV.order2_1.delta
 -2 -1.3438811525011756E+00  0  0  3   256   # pSATGeneratorTGOV.order2_1.der(delta)
 -2  9.9572229343302809E-01  0  0  2   272   # pSATGeneratorTGOV.order2_1.w
 -2 -9.8201408805971922E-03  0  0  3   256   # pSATGeneratorTGOV.order2_1.der(w)
 -2  1.0578533327690134E+00  0  0  6   256   # pSATGeneratorTGOV.order2_1.v
 -2  4.7801246182076834E-01  0  0  6   256   # pSATGeneratorTGOV.order2_1.P
 -2  1.4138109377183788E-01  0  0  6   256   # pSATGeneratorTGOV.order2_1.Q
 -2  4.2933333333333334E-01  0  0  6   256   # pSATGeneratorTGOV.order2_1.pm
 -2  1.7240838465155686E-01  0  0  6   256   # pSATGeneratorTGOV.order2_1.anglev
 -2  2.5309300364164594E-01  0  0  6   256   # pSATGeneratorTGOV.order2_1.vd
 -2  1.0271307634172770E+00  0  0  6   256   # pSATGeneratorTGOV.order2_1.vq
 -2  3.5681730928591238E-01  0  0  6   256   # pSATGeneratorTGOV.order2_1.id
 -2  6.1015671080435374E-01  0  0  6   256   # pSATGeneratorTGOV.order2_1.iq
 -2  7.1701869273115237E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.pe
 -2  1.1751385833090735E+00  0  0  6  1280   # pSATGeneratorTGOV.order2_1.vf_MB
 -2  3.1415926535897933E+02  0  0  6  1280   # pSATGeneratorTGOV.order2_1.w_b
 -2  1.5000000000000000E+00  0  0  6  1280   # pSATGeneratorTGOV.order2_1.S_SBtoMB
 -2  6.6666666666666663E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.I_MBtoSB
 -2       1                  0  0  6  1280   # pSATGeneratorTGOV.order2_1.V_MBtoSB
 -2  1.5000000000000000E+00  0  0  6  1280   # pSATGeneratorTGOV.order2_1.Z_MBtoSB
 -2  5.9999999999999998E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.p0
 -2  1.3200000000000001E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.q0
 -2  1.0277575167044148E+00  0  0  6  1280   # pSATGeneratorTGOV.order2_1.Vt0.re
 -2  1.5910526973539962E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.Vt0.im
 -2  5.9999999999999998E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.S0.re
 -2 -1.3200000000000001E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.S0.im
 -2  5.8954919159367758E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.I0.re
 -2 -3.7167927481271255E-02  0  0  6  1280   # pSATGeneratorTGOV.order2_1.I0.im
 -2  1.0277575167044148E+00  0  0  6  1280   # pSATGeneratorTGOV.order2_1.vr0
 -2  1.5910526973539962E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.vi0
 -2 -5.8954919159367758E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.ir0
 -2  3.7167927481271255E-02  0  0  6  1280   # pSATGeneratorTGOV.order2_1.ii0
 -2  4.1480000000000000E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.xq0
 -2  4.6401376802939115E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.delta0
 -2  3.1768168052891943E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.Vdq0.re
 -2  9.9029205280882737E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.Vdq0.im
 -2  4.4562808703048751E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.Idq0.re
 -2  7.6586711795785745E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.Idq0.im
 -2  3.1768168052891943E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.vd0
 -2  9.9029205280882737E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.vq0
 -2  4.4562808703048751E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.id0
 -2  7.6586711795785745E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.iq0
 -2  5.9999999999999987E-01  0  0  6  1280   # pSATGeneratorTGOV.order2_1.pm00
 -2  5.8119584998265710E+00  0  0  6  1280   # pSATGeneratorTGOV.order2_1.K
 -2       0                  0  0  6  1280   # pSATGeneratorTGOV.order2_1.c1
 -2  2.4108003857280615E+00  0  0  6  1280   # pSATGeneratorTGOV.order2_1.c2
 -2  2.4108003857280615E+00  0  0  6  1280   # pSATGeneratorTGOV.order2_1.c3
 -2  1.1751385833090735E+00  0  0  6  1280   # pSATGeneratorTGOV.order2_1.vf00
 -2  1.0400000000000000E+00  0  0  6   256   # pSATGeneratorTGOV.V_0
 -2  8.8000000000000007E+00  0  0  6   256   # pSATGeneratorTGOV.angle_0
 -2     450                  0  0  6   256   # pSATGeneratorTGOV.P_0
 -2      99                  0  0  6   256   # pSATGeneratorTGOV.Q_0
 -2  4.2777065669719061E-03  0  0  6   256   # pSATGeneratorTGOV.tGtypeII.add1.y
 -1       1                  0  0  1   280   # pSATGeneratorTGOV.tGtypeII.add1.k1
 -1      -1                  0  0  1   280   # pSATGeneratorTGOV.tGtypeII.add1.k2
 -2  5.2473200554855375E-02  0  0  6   256   # pSATGeneratorTGOV.tGtypeII.transferFunction1.u
 -2  4.8592575765527141E-03  0  0  6   256   # pSATGeneratorTGOV.tGtypeII.transferFunction1.y
 -2  5.0000000000000003E-02  0  0  6   256   # pSATGeneratorTGOV.tGtypeII.transferFunction1.b[1]
 -2       1                  0  0  6   256   # pSATGeneratorTGOV.tGtypeII.transferFunction1.b[2]
 -2  5.0000000000000000E-01  0  0  6   256   # pSATGeneratorTGOV.tGtypeII.transferFunction1.a[1]
 -2       1                  0  0  6   256   # pSATGeneratorTGOV.tGtypeII.transferFunction1.a[2]
 -2       1                  1  4  6   258   # pSATGeneratorTGOV.tGtypeII.transferFunction1.initType
 -1       0                  0  0  1   280   # pSATGeneratorTGOV.tGtypeII.transferFunction1.x_start[1]
 -1       0                  0  0  1   280   # pSATGeneratorTGOV.tGtypeII.transferFunction1.y_start
 -2       2                  0  0  6  1282   # pSATGeneratorTGOV.tGtypeII.transferFunction1.na
 -2       2                  0  0  6  1282   # pSATGeneratorTGOV.tGtypeII.transferFunction1.nb
 -2       1                  0  0  6  1282   # pSATGeneratorTGOV.tGtypeII.transferFunction1.nx
 -2  5.0000000000000003E-02  0  0  6  1280   # pSATGeneratorTGOV.tGtypeII.transferFunction1.bb[1]
 -2       1                  0  0  6  1280   # pSATGeneratorTGOV.tGtypeII.transferFunction1.bb[2]
 -2  1.0000000000000001E-01  0  0  6  1280   # pSATGeneratorTGOV.tGtypeII.transferFunction1.d
 -2       1                  0  0  6  1280   # pSATGeneratorTGOV.tGtypeII.transferFunction1.a_end
 -2 -4.3118053214758200E-04  0  0  2  1296   # pSATGeneratorTGOV.tGtypeII.transferFunction1.x_scaled[1]
 -2  1.0580876217400591E-01  0  0  3  1280   # pSATGeneratorTGOV.tGtypeII.transferFunction1.der(x_scaled[1])
 -1       1                  0  0  1   280   # pSATGeneratorTGOV.tGtypeII.wref
 -1  5.0000000000000003E-02  0  0  1   280   # pSATGeneratorTGOV.tGtypeII.R
 -1  6.9999999999999996E-01  0  0  1   280   # pSATGeneratorTGOV.tGtypeII.pmax0
 -1       0                  0  0  1   280   # pSATGeneratorTGOV.tGtypeII.pmin0
 -1  5.0000000000000000E-01  0  0  1   280   # pSATGeneratorTGOV.tGtypeII.Ts
 -1  5.0000000000000003E-02  0  0  1   280   # pSATGeneratorTGOV.tGtypeII.T3
 -1     750                  0  0  1   280   # pSATGeneratorTGOV.tGtypeII.S_b
 -1     460                  0  0  1   280   # pSATGeneratorTGOV.tGtypeII.Sn
 -2  1.2266666666666666E+01  0  0  6   256   # pSATGeneratorTGOV.tGtypeII.gain1.k
 -2       1                  0  0  6   256   # pSATGeneratorTGOV.tGtypeII.const.k
 -2  6.0485925757655257E-01  0  0  6   256   # pSATGeneratorTGOV.tGtypeII.add2.y
 -1       1                  0  0  1   280   # pSATGeneratorTGOV.tGtypeII.add2.k1
 -1       1                  0  0  1   280   # pSATGeneratorTGOV.tGtypeII.add2.k2
 -2  4.2933333333333334E-01  0  0  6   256   # pSATGeneratorTGOV.tGtypeII.limiter1.uMax
 -2       0                  0  0  6   256   # pSATGeneratorTGOV.tGtypeII.limiter1.uMin
 -2       0                  0  0  6   257   # pSATGeneratorTGOV.tGtypeII.limiter1.strict
 -2       1                  0  0  6   257   # pSATGeneratorTGOV.tGtypeII.limiter1.limitsAtInit
 -2  8.1521739130434784E-02  0  0  6  1280   # pSATGeneratorTGOV.tGtypeII.Ro
 -2  4.2933333333333334E-01  0  0  6  1280   # pSATGeneratorTGOV.tGtypeII.pmax
 -2       0                  0  0  6  1280   # pSATGeneratorTGOV.tGtypeII.pmin


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(488,139)
System base [MVA]
System Frequency [Hz]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Active Power absorbed by the Infinite bus (MW)
Reactive Power absorbed by the Infinite bus (MVAr)
Real part of the current
Imaginary part of the current
Display power flow results: [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage [1]
Imaginary part of the voltage [1]
Real part of the current [1]
Imaginary part of the current [1]
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Real part of the current [1]
Imaginary part of the current [1]
Real part of the current
Imaginary part of the current
System base power (MVA)
Sending end bus voltage (kV)
Power rating (MVA)
Voltage rating of transformer (kV)
Resistance (pu, transformer base)
Reactance (pu, transformer base)
Optional fixed tap ratio
Transformer base impedance
System base impedance
Resistance (pu, system base)
Reactance (pu, system base)
Internal parameter to switch on the icon arrow [:#(type=Boolean)]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Real part of the voltage
Imaginary part of the voltage
Real part of the current
Imaginary part of the current
Bus voltage magnitude (pu) [1]
Bus voltage angle [deg]
Display voltage values: [:#(type=Boolean)]
Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Resistance (pu) [1]
Reactance (pu) [1]
Shunt half conductance (pu) [1]
Shunt half susceptance (pu) [1]
System base power (MVA) [MVA]
[s]
[s]
[:#(type=Integer)]
Display power flow results: [:#(type=Boolean)]
[MW]
[MW]
[Mvar]
[Mvar]
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number [1]
Imaginary part of complex number [1]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Power rating (MVA) [MVA]
Voltage magnitude (pu) [1]
voltage angle (rad) [rad|deg]
Active power (pu) [1]
Reactive power (pu) [1]
[rad|deg]
Change of base between Machine and System [1]
maximum voltage [1]
minimum voltage [1]
force constant PQ-load, false may cause simulation problems [:#(type=Boolean)]


[:#(type=Boolean)]














[1]
[deg]
[:#(type=Boolean)]

[1]
[deg]
[1]
[deg]
[MW]
[Mvar]
[MW]
[Mvar]
[MW]
[Mvar]





[:#(type=Boolean)]
















[:#(type=Boolean)]
















[:#(type=Boolean)]
















[:#(type=Boolean)]














=true, if external tigger signal is used [:#(type=Boolean)]
Opening time [s]
Enable reclosure [:#(type=Boolean)]
Reclosing time [s]
Real part of the current
Imaginary part of the current
Help variable to indicate open circuit breaker [:#(type=Boolean)]
=true, if external tigger signal is used [:#(type=Boolean)]
Opening time [s]
Enable reclosure [:#(type=Boolean)]
Reclosing time [s]
Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Real part of the current
Imaginary part of the current
Resistance (pu)
Reactance (pu)
Start time of the fault (s)
End time of the fault (s)
[:#(type=Boolean)]

Connector of Real input signal 1
Connector of Real input signal 2
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of first Boolean input signal
Connector of Boolean output signal [:#(type=Boolean)]
Connector of Boolean input signal [:#(type=Boolean)]
Output signal for true Boolean input
Output signal for false Boolean input
Connector of Real output signal
Constant output value
Connector of Real input signal 1
Constant output value
Connector of Boolean input signal [:#(type=Boolean)]
Connector of Real output signal
Constant output value
Constant output value
Comparison with respect to threshold
Integrator gain [1]
Upper limit of output
Lower limit of output
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
= false, if limits are ignored during initialization (i.e., der(y)=k*u) [:#(type=Boolean)]
Initial or guess value of output (must be in the limits outMin .. outMax)
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Connector of Real output signal
der(Connector of Real output signal)
Offset of output signal [s]
Output = offset for time < startTime [s]
Connector of Real output signal [s]
Connector of Real input signal 1
Connector of Real input signal 2 [s]
Gain of upper input
Gain of lower input
Constant output value
Connector of Real output signal
Offset of output signal [s]
Output = offset for time < startTime [s]
Comparison with respect to threshold
Connector of Boolean output signal [:#(type=Boolean)]
Constant output value
Pick Up Current Value
Connector of second Boolean input signal
Connector of Boolean output signal [:#(type=Boolean)]
Alpha Constant Value
TMS Constant Value
C Constant Value
Connector of Boolean input signal [:#(type=Boolean)]
Connector of Real output signal
Constant output value
Constant output value
Comparison with respect to threshold
Connector of Boolean output signal [:#(type=Boolean)]
Connector of Real output signal
Constant output value
Constant output value
Connector of Real input signal 1
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real input signal 1
Constant output value
Comparison with respect to threshold
Connector of Boolean output signal [:#(type=Boolean)]
Constant output value
Constant output value
Constant output value
Constant output value
Constant output value
Constant output value

Constant output value
Constant output value
Start value of Q at initial time [:#(type=Boolean)]
[:#(type=Boolean)]
Start value of pre(u) at initial time [:#(type=Boolean)]
Connector of Boolean input signal [:#(type=Boolean)]
Constant output value [:#(type=Boolean)]
Constant output value
Start value of Q at initial time [:#(type=Boolean)]
[:#(type=Boolean)]
Start value of pre(u) at initial time [:#(type=Boolean)]
Connector of Boolean input signal [:#(type=Boolean)]
Constant output value [:#(type=Boolean)]
System base [MVA]
System Frequency [Hz]
Base voltage of the bus [kV]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
System base power [MVA]
System Frequeny [Hz]
Power rating (MVA) [MVA]
Voltage rating (kV) [kV]
Armature resistance (pu) [1]
d-axis transient reactance (pu) [1]
Mechanical starting time (2H), kWs/kVA
Damping coefficient
Rotor angle (rad) [rad|rad]
der(Rotor angle (rad)) [rad/s]
Rotor speed (pu) [1]
der(Rotor speed (pu)) [s-1]
Generator terminal voltage (pu) [1]
Active power (pu) [1]
Reactive power (pu) [1]
Mechanical power (pu) [1]
 Bus voltage angle (rad) [rad|deg]
d-axis voltage (pu) [1]
q-axis voltage (pu) [1]
d-axis currrent (pu) [1]
q-axis current (pu) [1]
electrical power transmitted through the air-gap [1]
field voltage on machine base [1]
Base frequency in rad/s [rad/s]
S(system base) -> S(machine base) [1]
I(machine base) -> I(system base) [1]
V(machine base) -> V(system base) [1]
Z(machine base) -> Z(system base) [1]
Initial active power generation in pu (system base) [1]
Initial reactive power generation in pu (system base) [1]
Real part of complex number
Imaginary part of complex number
Real part of complex number [1]
Imaginary part of complex number [1]
Real part of complex number
Imaginary part of complex number
Init. val. [1]
Init. val. [1]
Init. val. [1]
Init. val. [1]
used for setting the initial rotor angle [1]
Init. val. rotor angle [rad|deg]
Real part of complex number
Imaginary part of complex number
Real part of complex number
Imaginary part of complex number
Init. val. [1]
Init. val. [1]
Init. val. [1]
Init. val. [1]
Init. val. (pu, system base) [1]
a constant for scaling [1]
scaled ra [1]
scaled x'd [1]
scaled x'd [1]
Init. val. (pu, SB) [1]
Voltage magnitude (pu) [1]
Voltage angle [deg]
Active power [MW]
Reactive power [Mvar]
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real input signal
Connector of Real output signal
Numerator coefficients of transfer function (e.g., 2*s+3 is specified as {2,3})
Numerator coefficients of transfer function (e.g., 2*s+3 is specified as {2,3})
Denominator coefficients of transfer function (e.g., 5*s+6 is specified as {5,6})
Denominator coefficients of transfer function (e.g., 5*s+6 is specified as {5,6})
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess values of states
Initial value of output (derivatives of y are zero up to nx-1-th derivative)
Size of Denominator of transfer function. [:#(type=Integer)]
Size of Numerator of transfer function. [:#(type=Integer)]
[:#(type=Integer)]




Scaled vector x
der(Scaled vector x)
Reference speed (pu)
Droop (pu)
Maximum turbine output (pu)
Minimum turbine output (pu)
Governor Time constant (s)
Transient gain time constant (s)
System base power (MVA)
Nominal power (MVA)
Gain value multiplied with input signal [1]
Constant output value
Connector of Real output signal
Gain of upper input
Gain of lower input
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]




